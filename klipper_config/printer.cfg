# 
# Klipper configuration file for Anycubic i3 MEGA S
#
# This config file contains settings of all printer pins (steppers, sensors) for Anycubic i3 mega S with TMC2208 Drivers with stock plug orientation 
# Klipper firmware should be compiled for the atmega2560
#
# Config file includes
#  - Original or 2208(2209) rotated by cable drivers
#  - Mesh bed leveling: BLtouch (3DTouch sensor from Triangelab)
#  - Manual meshed bed leveling (commented out)
#  - 'virtual_sdcard' for fast printing without gaps
#  - Beeper through M300 gcode
#  - Pause/Resume through M600 for filament change
#  - START_PRINT/END_PRINT macros should be start and end g-code in slicer
#  - Pressure Advance and Input Shaper configured
#
# 3DTouch code is commented out. Z limit switches are used to home Z axis.
#
# Video covering installation here: https://youtu.be/cAxEIdThDiQ
#
# The latest version of the config reference is also available online at:
# https://www.klipper3d.org/Config_Reference.html
[gcode_macro m205]
gcode:

[stepper_x]
step_pin = PF0
## "!" for stock and TMC2208 with reversed plugs
dir_pin = PF1
#dir_pin = PF1
enable_pin = !PD7
rotation_distance = 40
Full_Steps_Per_Rotation = 200
Microsteps = 16
endstop_pin = ^!PE5
position_min = -5
position_endstop = -5
position_max = 225
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10


[stepper_y]
step_pin = PF6
## "" for stock and TMC2208 with reversed plugs
dir_pin = !PF7
#dir_pin = !PF7
enable_pin = !PF2
rotation_distance = 40
Full_Steps_Per_Rotation = 200
Microsteps = 16
endstop_pin = ^!PL7
position_endstop = 0
position_max = 215
homing_speed = 50
homing_retract_dist = 5
second_homing_speed = 10


[stepper_z]
step_pin = PL3
## "" for stock and TMC2208 with reversed plugs
# dir_pin = PL1
dir_pin = !PL1
enable_pin = !PK0
rotation_distance = 8
Full_Steps_Per_Rotation = 200
Microsteps = 16
## uncomment below for 3dtouch. comment for mannual mesh bed leveling
# endstop_pin = probe:z_virtual_endstop
## comment 2 lines below for 3dtouch bed leveling and to disable Z limit switches
endstop_pin = ^!PD3
#position_endstop = 0.0
position_max = 210
position_min = -5
homing_speed = 10
homing_retract_dist = 5
second_homing_speed = 3



[stepper_z1]
step_pin = PC1
## "" for stock and TMC2208 with reversed plugs
# dir_pin = PC3
dir_pin = !PC3
## comment below for 3dtouch bed leveling and to disable Z limit switches
endstop_pin = ^!PL6
enable_pin = !PC7
#step_distance = .0025
rotation_distance = 8
Full_Steps_Per_Rotation = 200
Microsteps = 16


[extruder]
step_pin = PA4
## "" for stock and TMC2208 with reversed plugs
dir_pin = PA6
#dir_pin = !PA6
enable_pin = !PA2
#control = pid
## original extruder stepper motor
rotation_distance = 4.73
Full_Steps_Per_Rotation = 200
Microsteps = 16
## NEMA17 23mm stepper motor
#step_distance = .00236
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PB4
sensor_type = ATC Semitec 104GT-2
sensor_pin = PK5
min_temp = 0
max_temp = 260

max_extrude_only_distance = 150.0
smooth_time = 1
min_extrude_temp = 180
pressure_advance = 0.05
pressure_advance_smooth_time = 0.02
max_extrude_cross_section = 150

[servo my_servo]
pin: PB5
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 100
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
#minimum_pulse_width: 0.001
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
#maximum_pulse_width: 0.002
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
#initial_angle:
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.

[heater_fan extruder_fan]
pin = PL5

[heater_bed]
heater_pin = PH5
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PK6
min_temp = 0
max_temp = 110
smooth_time = 1
#control = pid


[fan]
pin = PH6

[mcu]
serial = /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[printer]
kinematics = cartesian
max_velocity = 400
max_accel = 4000   #4000
minimum_cruise_ratio: 0.5
# max_accel_to_decel = 3000  #1500
max_z_velocity = 35  #7
max_z_accel = 2500  #190
square_corner_velocity = 5


## do your own measurement
## https://www.klipper3d.org/Resonance_Compensation.html
[input_shaper]
shaper_freq_x = 59.2
shaper_type_x = mzv 
shaper_freq_y = 40.4
shaper_type_y = mzv

[heater_fan stepstick_fan]
pin = PH4

#[bltouch]
#sensor_pin = ^PD2
#control_pin = PB5
## do your own measurement
#x_offset = 31.5
#y_offset = -18.5
#z_offset = 1.825
#stow_on_each_sample = False
#probe_with_touch_mode = True
[probe]
pin: ^PD2
x_offset: 11.82
y_offset: -16.85
#z_offset: 3
speed: 5
samples:3 
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

##Turn ON to adjust home location from 0,0,0
#[safe_z_home]
#home_xy_position = 100,100
#speed = 150
#z_hop = 10
#z_hop_speed = 10


# bltouch mesh bed leveling
[bed_mesh]
speed = 200
horizontal_move_z = 5
mesh_min = 30,30 #23,28
mesh_max = 190,190 #190,190
probe_count = 9,9
fade_start = 1.0
fade_end = 10.0
algorithm = bicubic
zero_reference_position: 125, 110

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default


[bed_screws]
screw1: 0, 4
screw2: 209, 4
screw3: 209, 210
screw4: 0, 210

## manual mesh bed leveling
# [bed_mesh]
# speed = 50
# horizontal_move_z = 5
# mesh_min = 30,30
# mesh_max = 180,180
# probe_count = 5,5
# fade_start = 1.0
# fade_end = 10.0


# enable moving befor homing
## put in terminal:
## SET_KINEMATIC_POSITION X=100 Y=100 Z=100
## then move as usual
[force_move]
enable_force_move: False


[virtual_sdcard]
path: ~/gcode_files


[output_pin BEEPER_pin]
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000


[gcode_macro M300]
# default_parameter_S: 1000
# default_parameter_P: 100
gcode:
    {% set S = params.S|default(1000)|float %}
    {% set P = params.P|default(100)|float %}
    SET_PIN PIN=BEEPER_pin VALUE=1000
    G4 P100
    SET_PIN PIN=BEEPER_pin VALUE=0


[display_status]


# change filament
[pause_resume]

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[gcode_macro M600]
# default_parameter_X: 50
# default_parameter_Y: 0
# default_parameter_Z: 10
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-150 F1000
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  G91		  #relative positioning
  # G1 E-.1 
  G10
  G1 Z10 Y50 F1000	#Z axis up 10mm, Y out 50mm
  G90		  #absolute positioning
  G28 X0 	#home X axis
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro START_PRINT]
gcode:
  G28 X0 Y0                     ; move X/Y to min endstops
  G28 Z0                        ; move Z to min endstops
  ;G1 Z20 Y5 F500                ; move nozzle away from bed
  G92 E0                        ; zero the extruded length
  G1 X10 Y.5 Z0.3 F5000.0       ; Move to start position
  G1 X40 Y.5 Z0.3 F1500.0 E7  ; Draw the first line
  G1 X40 Y.2 Z0.3 F5000.0      ; Move to side a little
  G1 X10 Y.2 Z0.3 F1500.0 E7   ; Draw the second line
  G92 E0                        ; Reset Extruder
  G1 Z5.0 F3000                 ; Move Z Axis up little to prevent scratching of Heat Bed and let out nozzle pressure
  G1 X0 Y15 Z0.4                ; Move back to heat bed, sticking blob of filament down before travel move to free nozzle 
  G92 E0                        ; zero the extruded length again
  M117 Printing...

[gcode_macro END_PRINT]
gcode:
  M400                          ; Clear Buffer
  M104 S0                       ; turn off extruder
  M140 S0                       ; turn off bed
  G10                           ; retract
  G91                           ; relative positioning
  G1 E-0.03 Z1.00 X20.0 Y20.0   ; move nozzle to remove stringing
  # G1 E-1                        ; retract more
  M106 S0                       ; turn off fan
  G1 Z20                        ; move nozzle up 20mm
  G90                           ; absolute positioning
  G0 X0 Y175                    ; park nozzle at rear
  M84                           ; steppers off
  G4 P250                       ; dwell
  #_TIMELAPSE_NEW_FRAME
  M300                          ; Beep

[gcode_macro Heat_Hotend]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200


[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True

#[gcode_macro _TIMELAPSE_NEW_FRAME]
#gcode:
# {action_call_remote_method("timelapse_newframe")}
# ; leave this in a separate macro!

#[gcode_macro TIMELAPSE_TAKE_FRAME]
#gcode:
#  G10
#  SAVE_GCODE_STATE NAME=SNAPSHOT
#  G1 X175.0 F10000
#  G1 Y100.0 F10000
#  G4 P500 ;dwell
#  M400    ;clear buffer
#  _TIMELAPSE_NEW_FRAME
#  G4 P250 ;moar dwelling
#  M400
#  RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1
#  G11
  

#[gcode_macro TIMELAPSE_RENDER]
#gcode:
#  {action_call_remote_method("timelapse_render")}

#[gcode_macro TOGGLE_LEDLIGHTS]
#gcode:
#  SET_PIN PIN=LEDlights VALUE={(not printer['output_pin LEDlights'].value)|int}


## for Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example

# Orca options

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

## [output_pin LEDlights]
## pin: rpi:gpio17
## value: 1
## shutdown_value: 1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 73.183
#*# pid_ki = 3.253
#*# pid_kd = 411.656
#*# control = pid
#*#
#*# [input_shaper]
#*#
#*# [extruder]
#*# pid_kp = 22.313
#*# pid_ki = 2.125
#*# pid_kd = 58.571
#*# control = pid
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.031530, -0.039030, -0.041530, -0.039030, -0.036530, -0.041530, -0.046530, -0.044030, -0.041530
#*# 	-0.016530, -0.021530, -0.024030, -0.029030, -0.026530, -0.034030, -0.029030, -0.019030, -0.006530
#*# 	-0.001530, -0.009030, -0.006530, -0.004030, 0.003470, 0.008470, 0.008470, 0.018470, 0.025970
#*# 	0.005970, -0.004030, -0.004030, 0.000970, 0.005970, 0.005970, 0.008470, 0.018470, 0.025970
#*# 	-0.004030, -0.016530, -0.016530, -0.009030, -0.004030, 0.000970, 0.000970, 0.010970, 0.023470
#*# 	-0.009030, -0.019030, -0.016530, -0.016530, -0.009030, -0.006530, -0.001530, 0.003470, 0.015970
#*# 	-0.016530, -0.029030, -0.034030, -0.026530, -0.024030, -0.016530, -0.021530, -0.006530, 0.010970
#*# 	-0.026530, -0.046530, -0.054030, -0.049030, -0.049030, -0.049030, -0.044030, -0.039030, -0.019030
#*# 	-0.041530, -0.069030, -0.076530, -0.076530, -0.079030, -0.076530, -0.074030, -0.059030, -0.041530
#*# tension = 0.2
#*# min_x = 29.99
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 9
#*# max_y = 190.0
#*# mesh_x_pps = 2
#*# max_x = 189.99
#*#
#*# [stepper_z]
#*# position_endstop = 0.132
#*#
#*# [probe]
#*# z_offset = 0.560
